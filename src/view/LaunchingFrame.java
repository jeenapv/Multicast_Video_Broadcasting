/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LaunchingFrame.java
 *
 * Created on Sep 24, 2016, 10:08:10 PM
 */
package view;

import General.Configuration;
import Network.DataSender;
import db.Dbcon;
import java.io.File;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Arrays;
import java.util.Random;

/**
 *
 * @author kakes
 */
public class LaunchingFrame extends javax.swing.JFrame {

    /** Creates new form LaunchingFrame */
    public LaunchingFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public LaunchingFrame(String presentation, String multicastListName) {
        initComponents();
        this.setLocationRelativeTo(null);
        presentation_name.setText(presentation);
        subscription_list.setText(multicastListName);
        loadOrganisations(multicastListName);
    }

    private void loadOrganisations(String subscribtionName) {
        try {
            String sql = "SELECT * FROM tbl_subscription AS sub WHERE sub.subscription_name='" + subscribtionName.trim() + "'";
            Dbcon dbcon = new Dbcon();
            ResultSet select = dbcon.select(sql);
            if (select.next()) {
                String subscriptionId = select.getString("id");
                ResultSet rs = dbcon.select("select org.organization_name,org.ip_address,org.port from tbl_subscription_list as sub, tbl_organization as org where sub.organization_id=org.organization_id and subscription_id=" + subscriptionId);

                Object arr[] = new Object[10];

                int count = 0;
                DefaultTableModel model = (DefaultTableModel) subscribtion_list_table.getModel();
                while (rs.next()) {
                    count++;
                    arr[0] = count + "";
                    arr[1] = rs.getString("organization_name");
                    arr[2] = false;
                    arr[3] = rs.getString("port");
                    arr[4] = rs.getString("ip_address");
                    model.addRow(arr);
                }



            } else {
                JOptionPane.showMessageDialog(rootPane, "Such a scubsciption could not be found now");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        presentation_name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        subscription_list = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        subscribtion_list_table = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        progress_bar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Launching presentation");

        jButton2.setText("HOME");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        presentation_name.setEditable(false);

        jLabel2.setText("Launching to");

        subscription_list.setEditable(false);

        subscribtion_list_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Organisation", "Sending complete", "port", "ip"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(subscribtion_list_table);
        subscribtion_list_table.getColumnModel().getColumn(0).setMinWidth(50);
        subscribtion_list_table.getColumnModel().getColumn(0).setPreferredWidth(50);
        subscribtion_list_table.getColumnModel().getColumn(0).setMaxWidth(50);
        subscribtion_list_table.getColumnModel().getColumn(3).setMinWidth(0);
        subscribtion_list_table.getColumnModel().getColumn(3).setPreferredWidth(0);
        subscribtion_list_table.getColumnModel().getColumn(3).setMaxWidth(0);
        subscribtion_list_table.getColumnModel().getColumn(4).setMinWidth(0);
        subscribtion_list_table.getColumnModel().getColumn(4).setPreferredWidth(0);
        subscribtion_list_table.getColumnModel().getColumn(4).setMaxWidth(0);

        jButton1.setText("START");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(subscription_list, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(presentation_name, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progress_bar, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(presentation_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subscription_list, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progress_bar, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // TODO add your handling code here:
    this.dispose();
    AdminHome adminHome = new AdminHome();
    adminHome.setVisible(true);
}//GEN-LAST:event_jButton2ActionPerformed

    private void launchPresentation() {
        String presentationName = presentation_name.getText().trim();
        try {
            Dbcon dbcon = new Dbcon();
            ResultSet select = dbcon.select("select file_name from tbl_create_presentation where name='" + presentationName + "'");
            if (select.next()) {
                String file_name = select.getString("file_name");
                File presentationFile = new File(Configuration.presentationFolder + file_name);

                for (int i = 0; i < subscribtion_list_table.getRowCount(); i++) {
                    String organisationName = (String) subscribtion_list_table.getValueAt(i, 1);
                    String port = (String) subscribtion_list_table.getValueAt(i, 3);
                    String ipAddress = (String) subscribtion_list_table.getValueAt(i, 4);
                    System.out.println("organisationName " + organisationName);
                    System.out.println("ipAddress " + ipAddress);
                    System.out.println("port " + port);
                    sendFileToOrganisation(organisationName, ipAddress, port, presentationFile);

                    // sending logic here

                }


            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    int packetDataSize = 100;
    String deLimiter = "-#$@&-";

    public static int generateNewFTPPort(int min, int max) {
        Random rand = new Random();
        int randomNum = rand.nextInt((max - min) + 1) + min;
        return randomNum;
    }

    class FtpThread extends Thread {

        int ftpPort;
        String ipAddress;
        File fileToBeSend;

        private FtpThread(int ftpPort, String ipAddress, File fileToBeSend) {
            this.ftpPort = ftpPort;
            this.ipAddress = ipAddress;
            this.fileToBeSend = fileToBeSend;
        }

        public void run() {
            System.out.println("FTP thread listening on " + ftpPort);

            try {
                ServerSocket ssock = new ServerSocket(ftpPort);
                Socket socket = ssock.accept();

                //The InetAddress specification
                InetAddress IA = InetAddress.getByName(ipAddress);

                //Specify the file
                FileInputStream fis = new FileInputStream(fileToBeSend);
                BufferedInputStream bis = new BufferedInputStream(fis);

                //Get socket's output stream
                OutputStream os = socket.getOutputStream();

                //Read File Contents into contents array 
                byte[] contents;
                long fileLength = fileToBeSend.length();
                long current = 0;

                long start = System.nanoTime();
                while (current != fileLength) {
                    int size = 10000;
                    if (fileLength - current >= size) {
                        current += size;
                    } else {
                        size = (int) (fileLength - current);
                        current = fileLength;
                    }
                    contents = new byte[size];
                    bis.read(contents, 0, size);
                    os.write(contents);
                    System.out.println("Sending file ... " + (current * 100) / fileLength + "% complete!");
                }

                os.flush();
                //File transfer done. Close the socket connection!
                socket.close();
                ssock.close();
                System.out.println("File sent succesfully!");
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }

    private void sendFileToOrganisation(String organisation, String ipAddress, String port, File fileToBeSend) {
        System.out.println("Sending file " + fileToBeSend.getPath());
        System.out.println("To " + ipAddress + " with port " + port);

        int ftpPort = generateNewFTPPort(3000, 9999);

        new FtpThread(ftpPort, ipAddress, fileToBeSend).start();
        String vedioActivationString = Configuration.adminIp + deLimiter + ftpPort + deLimiter + fileToBeSend.getName();

        DataSender dataSender = new DataSender();
        dataSender.sendNow(vedioActivationString, ipAddress, Integer.parseInt(port));
        // send ping request to client

        try {
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static String getStringFormat(byte[] dataArray) {
        return Base64.encode(dataArray);
    }

    class launchThread extends Thread {

        public void run() {
            launchPresentation();
        }
    }
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


    new launchThread().start();

}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LaunchingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LaunchingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LaunchingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LaunchingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new LaunchingFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField presentation_name;
    private javax.swing.JProgressBar progress_bar;
    private javax.swing.JTable subscribtion_list_table;
    private javax.swing.JTextField subscription_list;
    // End of variables declaration//GEN-END:variables
}
